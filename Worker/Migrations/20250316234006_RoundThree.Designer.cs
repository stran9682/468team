// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Worker.Models;

#nullable disable

namespace Worker.Migrations
{
    [DbContext(typeof(ClothingItemContext))]
    [Migration("20250316234006_RoundThree")]
    partial class RoundThree
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Worker.Models.ClothingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("StyleId")
                        .HasColumnType("integer");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("StyleId");

                    b.HasIndex("TypeId");

                    b.ToTable("ClothingItems");
                });

            modelBuilder.Entity("Worker.Models.ClothingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClothingItemType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClothingTypes");
                });

            modelBuilder.Entity("Worker.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClothingColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClothingColors");
                });

            modelBuilder.Entity("Worker.Models.Fit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClothingFit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fits");
                });

            modelBuilder.Entity("Worker.Models.ClothingItem", b =>
                {
                    b.HasOne("Worker.Models.Color", "Color")
                        .WithMany("MatchingColoredItems")
                        .HasForeignKey("ColorId");

                    b.HasOne("Worker.Models.Fit", "Style")
                        .WithMany("MatchingFitItems")
                        .HasForeignKey("StyleId");

                    b.HasOne("Worker.Models.ClothingType", "Type")
                        .WithMany("MatchingTypeItems")
                        .HasForeignKey("TypeId");

                    b.Navigation("Color");

                    b.Navigation("Style");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Worker.Models.ClothingType", b =>
                {
                    b.Navigation("MatchingTypeItems");
                });

            modelBuilder.Entity("Worker.Models.Color", b =>
                {
                    b.Navigation("MatchingColoredItems");
                });

            modelBuilder.Entity("Worker.Models.Fit", b =>
                {
                    b.Navigation("MatchingFitItems");
                });
#pragma warning restore 612, 618
        }
    }
}
